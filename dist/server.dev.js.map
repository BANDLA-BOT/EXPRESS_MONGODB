{"version":3,"sources":["server.js"],"names":["express","require","router","Router","app","PORT","loginMiddleware","req","res","next","console","log","Date","method","url","use","auth","authStatus","status","Error","getUser","json","message","createUser","route","get","post","errorHandler","err","statusCode","title","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAEA,IAAMC,GAAG,GAAGJ,OAAO,EAAnB;AACA,IAAMK,IAAI,GAAG,IAAb,C,CAEA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,WAAe,IAAIC,IAAJ,EAAf,2BAA0CL,GAAG,CAACM,MAA9C,gBAA0DN,GAAG,CAACO,GAA9D;AACAL,EAAAA,IAAI;AACL,CAHD;;AAIAL,GAAG,CAACW,GAAJ,CAAQT,eAAR;;AAEA,IAAMU,IAAI,GAAG,SAAPA,IAAO,CAACT,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,MAAMQ,UAAU,GAAG,IAAnB;;AACA,MAAIA,UAAJ,EAAgB;AACdP,IAAAA,OAAO,CAACC,GAAR,6BAAiCM,UAAjC;AACAR,IAAAA,IAAI;AACL,GAHD,MAGO;AACLD,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACA,UAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;AACF,CATD,C,CAWA;;;AACAf,GAAG,CAACW,GAAJ,CAAQ,YAAR,EAAsBb,MAAtB;;AACA,IAAMkB,OAAO,GAAG,SAAVA,OAAU,CAACb,GAAD,EAAMC,GAAN,EAAc;AAC5BA,EAAAA,GAAG,CAACa,IAAJ,CAAS;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAT;AACD,CAFD;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAC/BA,EAAAA,GAAG,CAACa,IAAJ,CAAS;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAT;AACD,CAFD;;AAGApB,MAAM,CAACa,GAAP,CAAWC,IAAX;AACAd,MAAM,CAACsB,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsBL,OAAtB,EAA+BM,IAA/B,CAAoCH,UAApC,E,CAMA;;AACA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMrB,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC5C,MAAMoB,UAAU,GAAGrB,GAAG,CAACqB,UAAJ,GAAiBrB,GAAG,CAACqB,UAArB,GAAkC,GAArD;AACArB,EAAAA,GAAG,CAACU,MAAJ,CAAWW,UAAX;;AACA,UAAQA,UAAR;AACE,SAAK,GAAL;AACErB,MAAAA,GAAG,CAACa,IAAJ,CAAS;AACPS,QAAAA,KAAK,EAAE,cADA;AAEPR,QAAAA,OAAO,EAAEM,GAAG,CAACN;AAFN,OAAT;AAIA;;AACF,SAAK,GAAL;AACEd,MAAAA,GAAG,CAACa,IAAJ,CAAS;AACPS,QAAAA,KAAK,EAAE,WADA;AAEPR,QAAAA,OAAO,EAAEM,GAAG,CAACN;AAFN,OAAT;AAIA;;AACF,SAAK,GAAL;AACEd,MAAAA,GAAG,CAACa,IAAJ,CAAS;AACPS,QAAAA,KAAK,EAAE,uBADA;AAEPR,QAAAA,OAAO,EAAEM,GAAG,CAACN;AAFN,OAAT;AAIA;;AAEF;AACE;AArBJ;AAuBD,CA1BD;;AA4BAlB,GAAG,CAACW,GAAJ,CAAQY,YAAR;AAKAvB,GAAG,CAAC2B,MAAJ,CAAW1B,IAAX,EAAiB,YAAM;AACrBK,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,IAA/B;AACD,CAFD","sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\n\r\nconst app = express();\r\nconst PORT = 8000;\r\n\r\n//Application level middlewares\r\nconst loginMiddleware = (req, res, next) => {\r\n  console.log(`${new Date()} === Request [${req.method}] [${req.url}]`);\r\n  next();\r\n};\r\napp.use(loginMiddleware);\r\n\r\nconst auth = (req, res, next) => {\r\n  const authStatus = true;\r\n  if (authStatus) {\r\n    console.log(`User Auth status: ${authStatus}`);\r\n    next();\r\n  } else {\r\n    res.status(401);\r\n    throw new Error(\"User not authorized to access\");\r\n  }\r\n};\r\n\r\n//Router level middleware\r\napp.use(\"/api/users\", router);\r\nconst getUser = (req, res) => {\r\n  res.json({ message: \"Get all users\" });\r\n};\r\nconst createUser = (req, res) => {\r\n  res.json({ message: \"user created\" });\r\n};\r\nrouter.use(auth);\r\nrouter.route(\"/\").get(getUser).post(createUser);\r\n\r\n\r\n\r\n\r\n\r\n//Error handling middleware\r\nconst errorHandler = (err, req, res, next) => {\r\n  const statusCode = res.statusCode ? res.statusCode : 500;\r\n  res.status(statusCode);\r\n  switch (statusCode) {\r\n    case 401:\r\n      res.json({\r\n        title: \"Unauthorized\",\r\n        message: err.message,\r\n      });\r\n      break\r\n    case 404:\r\n      res.json({\r\n        title: \"Not Found\",\r\n        message: err.message,\r\n      });\r\n      break\r\n    case 500:\r\n      res.json({\r\n        title: \"Internal server error\",\r\n        message: err.message,\r\n      });\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\napp.use(errorHandler)\r\n\r\n\r\n\r\n\r\napp.listen(PORT, () => {\r\n  console.log(\"Server Running \", PORT);\r\n});\r\n"],"file":"server.dev.js"}