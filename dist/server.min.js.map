{"version":3,"sources":["server.js"],"names":["express","require","router","Router","app","loginMiddleware","req","res","next","console","concat","Date","url","use","authStatus","getUser","json","message","createUser","auth","route","get","post","errorHandler","err","statusCode","status","title","listen","PORT","log"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SAEjBC,IAAMJ,UAFNE,KAASF,IAMTK,gBAAkB,SAACC,EAAKC,EAAKC,GAAnCC,QAAMJ,IAAN,GAAAK,OAAML,IAAeM,KAArB,kBAAAD,OAAML,EAAmBC,OAAzB,OAAAI,OAAmCF,EAASI,IAA5C,MACEH,KAEDL,IAHDS,IAAAR,iBAIAD,IAAIS,KAAIR,SAAAA,EAAAA,EAARG,GAGEC,QAAMK,IAAN,qBAAAJ,QAAmB,IAGjBF,KAKHJ,IAEDS,IAAA,aAAAX,QAEA,IAAMa,QAAU,SAACT,EAAKC,GACpBA,EAAIS,KAAK,CAAEC,QAAS,mBAEhBC,WAAa,SAACZ,EAAKC,GAHzBA,EAAMQ,KAAO,CAAAE,QAAG,kBACHA,OAAAA,IAAOE,MAATjB,OAATkB,MAAA,KAAAC,IAAAN,SAAAO,KAAAJ,YAID,IAFDK,aAAA,SAAAC,EAAAlB,EAAAC,GAYE,IAAMkB,EAAalB,EAAIkB,WAAalB,EAAIkB,WAAa,IARvDvB,OADAA,EAAMwB,OAAKP,GACJC,GAWH,KAAK,IAJHG,EAAAA,KAAAA,CACEE,MAAAA,eACFC,QAAOD,EAAAA,UACX,MACE,KAAK,IACHlB,EAAIS,KAAK,CACPW,MAAO,YACPV,QAASO,EAAIP,UAEf,MAOF,KAAK,IANLV,EAAKS,KAAL,CACET,MAAS,wBACPoB,QAAOH,EAAAP,YAKAb,IAAAS,IAATU,cAdJnB,IAAAwB,OAAAC,KAAA,WAHFpB,QAAAqB,IAAA,kBAAAD","file":"server.min.js","sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\n\r\nconst app = express();\r\nconst PORT = 8000;\r\n\r\n//Application level middlewares\r\nconst loginMiddleware = (req, res, next) => {\r\n  console.log(`${new Date()} === Request [${req.method}] [${req.url}]`);\r\n  next();\r\n};\r\napp.use(loginMiddleware);\r\n\r\nconst auth = (req, res, next) => {\r\n  const authStatus = true;\r\n  if (authStatus) {\r\n    console.log(`User Auth status: ${authStatus}`);\r\n    next();\r\n  } else {\r\n    res.status(401);\r\n    throw new Error(\"User not authorized to access\");\r\n  }\r\n};\r\n\r\n//Router level middleware\r\napp.use(\"/api/users\", router);\r\nconst getUser = (req, res) => {\r\n  res.json({ message: \"Get all users\" });\r\n};\r\nconst createUser = (req, res) => {\r\n  res.json({ message: \"user created\" });\r\n};\r\nrouter.use(auth);\r\nrouter.route(\"/\").get(getUser).post(createUser);\r\n\r\n\r\n\r\n\r\n\r\n//Error handling middleware\r\nconst errorHandler = (err, req, res, next) => {\r\n  const statusCode = res.statusCode ? res.statusCode : 500;\r\n  res.status(statusCode);\r\n  switch (statusCode) {\r\n    case 401:\r\n      res.json({\r\n        title: \"Unauthorized\",\r\n        message: err.message,\r\n      });\r\n      break\r\n    case 404:\r\n      res.json({\r\n        title: \"Not Found\",\r\n        message: err.message,\r\n      });\r\n      break\r\n    case 500:\r\n      res.json({\r\n        title: \"Internal server error\",\r\n        message: err.message,\r\n      });\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\napp.use(errorHandler)\r\n\r\n\r\n\r\n\r\napp.listen(PORT, () => {\r\n  console.log(\"Server Running \", PORT);\r\n});\r\n"]}